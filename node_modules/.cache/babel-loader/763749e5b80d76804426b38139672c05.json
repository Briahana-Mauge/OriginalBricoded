{"ast":null,"code":"var _jsxFileName = \"/Users/briahanamauge/Desktop/Core/Personal_Projects/bricoded/src/Components/Sidebar.jsx\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport '../CSS/Sidebar.css';\nimport Button from './Button'; // class Ham extends React.Component {\n//   //create a state!!!!!!! in the state: \n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       menuOpen: false\n//     }\n//   }\n//   closeMenu() {\n//     this.setState({ menuOpen: false })\n//   }\n//   return() {\n//     <Menu className='menu'>\n//       <Link onClick={() => this.closeMenu()} className='menu-item' to=\"/\">Home</Link>\n//       <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/projects\">Projects</Link>\n// <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/about\">\n//   About\n// </Link>\n//       <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/contact\">\n//         Contact\n//       </Link>\n//       <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/days-of-code\">\n//         Days of Code\n//       </Link>\n//       {/* <Button handleSwitch={props.handleSwitch} switched={true} />\n//       <label className=\"switch\" >\n//         <input type=\"checkbox\" onChange={props.handleSwitch} checked={true} />\n//         <span className=\"slider round\"></span>\n//       </label> */}\n//     </Menu>\n//   }\n// }\n// export default Ham;\n\nclass ParentComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false\n    };\n  } // This keeps your state in sync with the opening/closing of the menu\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\n\n\n  handleStateChange(state) {\n    this.setState({\n      menuOpen: state.isOpen\n    });\n  } // This can be used to close the menu, e.g. when a user clicks a menu item\n\n\n  closeMenu() {\n    this.setState({\n      menuOpen: false\n    });\n  } // This can be used to toggle the menu, e.g. when using a custom icon\n  // Tip: You probably want to hide either/both default icons if using a custom icon\n  // See https://github.com/negomi/react-burger-menu#custom-icons\n\n\n  toggleMenu() {\n    this.setState(state => ({\n      menuOpen: !state.menuOpen\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      isOpen: this.state.menuOpen,\n      onStateChange: state => this.handleStateChange(state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      onClick: () => this.closeMenu(),\n      className: \"menu-item\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"a\", {\n      onClick: () => this.closeMenu(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"About\"), React.createElement(\"a\", {\n      onClick: () => this.closeMenu(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Contact\"), React.createElement(\"a\", {\n      onClick: () => this.closeMenu(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Settings\")));\n  }\n\n}\n\nexport default ParentComponent;","map":{"version":3,"sources":["/Users/briahanamauge/Desktop/Core/Personal_Projects/bricoded/src/Components/Sidebar.jsx"],"names":["React","Link","slide","Menu","Button","ParentComponent","Component","constructor","props","state","menuOpen","handleStateChange","setState","isOpen","closeMenu","toggleMenu","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAK,IAAIC,IAAlB,QAA8B,mBAA9B;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEM;AACA;AACA;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GAN2C,CAQ5C;AACA;;;AACAC,EAAAA,iBAAiB,CAAEF,KAAF,EAAS;AACxB,SAAKG,QAAL,CAAc;AAACF,MAAAA,QAAQ,EAAED,KAAK,CAACI;AAAjB,KAAd;AACD,GAZ2C,CAc5C;;;AACAC,EAAAA,SAAS,GAAI;AACX,SAAKF,QAAL,CAAc;AAACF,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACD,GAjB2C,CAmB5C;AACA;AACA;;;AACAK,EAAAA,UAAU,GAAI;AACZ,SAAKH,QAAL,CAAcH,KAAK,KAAK;AAACC,MAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC;AAAlB,KAAL,CAAnB;AACD;;AAEDM,EAAAA,MAAM,GAAI;AACR,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWC,QADrB;AAEE,MAAA,aAAa,EAAGD,KAAD,IAAW,KAAKE,iBAAL,CAAuBF,KAAvB,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIF,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,MAAM,KAAKK,SAAL,EAArB;AAAuC,MAAA,SAAS,EAAC,WAAjD;AAA6D,MAAA,EAAE,EAAC,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJE,EAKE;AAAG,MAAA,OAAO,EAAE,MAAM,KAAKA,SAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,EAME;AAAG,MAAA,OAAO,EAAE,MAAM,KAAKA,SAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,EAOE;AAAG,MAAA,OAAO,EAAE,MAAM,KAAKA,SAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADF,CADF;AAaD;;AAxC2C;;AA0C9C,eAAeT,eAAf","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport '../CSS/Sidebar.css'\nimport Button from './Button';\n\n\n// class Ham extends React.Component {\n//   //create a state!!!!!!! in the state: \n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       menuOpen: false\n//     }\n//   }\n\n//   closeMenu() {\n//     this.setState({ menuOpen: false })\n//   }\n\n\n//   return() {\n//     <Menu className='menu'>\n//       <Link onClick={() => this.closeMenu()} className='menu-item' to=\"/\">Home</Link>\n\n//       <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/projects\">Projects</Link>\n\n      // <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/about\">\n      //   About\n      // </Link>\n\n//       <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/contact\">\n//         Contact\n//       </Link>\n//       <Link onClick={() => this.closeMenu()} className=\"menu-item\" to=\"/days-of-code\">\n//         Days of Code\n//       </Link>\n//       {/* <Button handleSwitch={props.handleSwitch} switched={true} />\n//       <label className=\"switch\" >\n//         <input type=\"checkbox\" onChange={props.handleSwitch} checked={true} />\n//         <span className=\"slider round\"></span>\n//       </label> */}\n//     </Menu>\n//   }\n// }\n\n// export default Ham;\nclass ParentComponent extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      menuOpen: false\n    }\n  }\n\n  // This keeps your state in sync with the opening/closing of the menu\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\n  handleStateChange (state) {\n    this.setState({menuOpen: state.isOpen})  \n  }\n  \n  // This can be used to close the menu, e.g. when a user clicks a menu item\n  closeMenu () {\n    this.setState({menuOpen: false})\n  }\n\n  // This can be used to toggle the menu, e.g. when using a custom icon\n  // Tip: You probably want to hide either/both default icons if using a custom icon\n  // See https://github.com/negomi/react-burger-menu#custom-icons\n  toggleMenu () {\n    this.setState(state => ({menuOpen: !state.menuOpen}))\n  }\n\n  render () {\n    return (\n      <div>\n        <Menu \n          isOpen={this.state.menuOpen}\n          onStateChange={(state) => this.handleStateChange(state)}\n        >\n      <Link onClick={() => this.closeMenu()} className='menu-item' to=\"/\">Home</Link>\n          <a onClick={() => this.closeMenu()}>About</a>\n          <a onClick={() => this.closeMenu()}>Contact</a>\n          <a onClick={() => this.closeMenu()}>Settings</a>\n        </Menu>\n      </div>\n    )\n  }\n}\nexport default ParentComponent"]},"metadata":{},"sourceType":"module"}